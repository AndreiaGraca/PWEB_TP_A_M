// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PWEB_TP_A_M.Data;

namespace PWEB_TP_A_M.Migrations
{
    [DbContext(typeof(TpCodeFirstDbContext))]
    partial class TpCodeFirstDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PWEB_TP_A_M.Models.Administracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CentrosTesteId")
                        .HasColumnType("int");

                    b.Property<int>("ClientesId")
                        .HasColumnType("int");

                    b.Property<string>("Laboratorios")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentrosTesteId");

                    b.HasIndex("ClientesId");

                    b.ToTable("Administracao");
                });

            modelBuilder.Entity("PWEB_TP_A_M.Models.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnaliseId")
                        .HasColumnType("int");

                    b.Property<int?>("AnalisesId")
                        .HasColumnType("int");

                    b.Property<int>("CentroId")
                        .HasColumnType("int");

                    b.Property<int?>("CentrosId")
                        .HasColumnType("int");

                    b.Property<int>("TestesId")
                        .HasColumnType("int");

                    b.Property<string>("TipoAgendamentoNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnalisesId");

                    b.HasIndex("CentrosId");

                    b.HasIndex("TestesId");

                    b.ToTable("Agendamento");
                });

            modelBuilder.Entity("PWEB_TP_A_M.Models.Analises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeAnalise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultados")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAnalise")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Analises");
                });

            modelBuilder.Entity("PWEB_TP_A_M.Models.CentroTeste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnalisesId")
                        .HasColumnType("int");

                    b.Property<string>("Horario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LimTestes")
                        .HasColumnType("int");

                    b.Property<string>("Localidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalidadeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocalizacoesId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tecnico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TecnicosId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TecnicosId1")
                        .HasColumnType("int");

                    b.Property<int>("Vagas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnalisesId");

                    b.HasIndex("LocalizacoesId");

                    b.HasIndex("TecnicosId1");

                    b.ToTable("CentroTeste");
                });

            modelBuilder.Entity("PWEB_TP_A_M.Models.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<int>("BI")
                        .HasColumnType("int");

                    b.Property<int>("IdAgendamento")
                        .HasColumnType("int");

                    b.Property<int>("NIF")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgendamentoId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PWEB_TP_A_M.Models.Gestores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Centro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CentroId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CentroTesteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CentroTesteId");

                    b.ToTable("Gestores");
                });

            modelBuilder.Entity("PWEB_TP_A_M.Models.Localizacoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Distrito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidade")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Localizacoes");
                });

            modelBuilder.Entity("PWEB_TP_A_M.Models.Tecnicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Especialidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAgendamento")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgendamentoId");

                    b.ToTable("Tecnicos");
                });

            modelBuilder.Entity("PWEB_TP_A_M.Models.Testes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeTeste")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Resultado")
                        .HasColumnType("int");

                    b.Property<string>("TipoTeste")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Testes");
                });

            modelBuilder.Entity("PWEB_TP_A_M.Models.Administracao", b =>
                {
                    b.HasOne("PWEB_TP_A_M.Models.CentroTeste", "CentrosTeste")
                        .WithMany()
                        .HasForeignKey("CentrosTesteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PWEB_TP_A_M.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CentrosTeste");

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("PWEB_TP_A_M.Models.Agendamento", b =>
                {
                    b.HasOne("PWEB_TP_A_M.Models.Analises", "Analises")
                        .WithMany()
                        .HasForeignKey("AnalisesId");

                    b.HasOne("PWEB_TP_A_M.Models.CentroTeste", "Centros")
                        .WithMany()
                        .HasForeignKey("CentrosId");

                    b.HasOne("PWEB_TP_A_M.Models.Testes", "Testes")
                        .WithMany()
                        .HasForeignKey("TestesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Analises");

                    b.Navigation("Centros");

                    b.Navigation("Testes");
                });

            modelBuilder.Entity("PWEB_TP_A_M.Models.CentroTeste", b =>
                {
                    b.HasOne("PWEB_TP_A_M.Models.Analises", "Analises")
                        .WithMany()
                        .HasForeignKey("AnalisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PWEB_TP_A_M.Models.Localizacoes", "Localizacoes")
                        .WithMany()
                        .HasForeignKey("LocalizacoesId");

                    b.HasOne("PWEB_TP_A_M.Models.Tecnicos", "Tecnicos")
                        .WithMany()
                        .HasForeignKey("TecnicosId1");

                    b.Navigation("Analises");

                    b.Navigation("Localizacoes");

                    b.Navigation("Tecnicos");
                });

            modelBuilder.Entity("PWEB_TP_A_M.Models.Clientes", b =>
                {
                    b.HasOne("PWEB_TP_A_M.Models.Agendamento", "Agendamento")
                        .WithMany()
                        .HasForeignKey("AgendamentoId");

                    b.Navigation("Agendamento");
                });

            modelBuilder.Entity("PWEB_TP_A_M.Models.Gestores", b =>
                {
                    b.HasOne("PWEB_TP_A_M.Models.CentroTeste", "CentroTeste")
                        .WithMany()
                        .HasForeignKey("CentroTesteId");

                    b.Navigation("CentroTeste");
                });

            modelBuilder.Entity("PWEB_TP_A_M.Models.Tecnicos", b =>
                {
                    b.HasOne("PWEB_TP_A_M.Models.Agendamento", "Agendamento")
                        .WithMany()
                        .HasForeignKey("AgendamentoId");

                    b.Navigation("Agendamento");
                });
#pragma warning restore 612, 618
        }
    }
}
